Terminals which are not used

   RESERVED
   DOTLENGHT


State 32 conflicts: 3 shift/reduce
State 54 conflicts: 2 shift/reduce
State 56 conflicts: 2 shift/reduce
State 60 conflicts: 2 shift/reduce
State 61 conflicts: 2 shift/reduce
State 62 conflicts: 2 shift/reduce
State 63 conflicts: 2 shift/reduce
State 70 conflicts: 2 shift/reduce
State 73 conflicts: 3 shift/reduce
State 100 conflicts: 2 shift/reduce
State 101 conflicts: 2 shift/reduce
State 102 conflicts: 2 shift/reduce
State 103 conflicts: 2 shift/reduce
State 104 conflicts: 2 shift/reduce
State 105 conflicts: 2 shift/reduce
State 106 conflicts: 2 shift/reduce
State 107 conflicts: 2 shift/reduce
State 108 conflicts: 2 shift/reduce
State 109 conflicts: 2 shift/reduce
State 110 conflicts: 2 shift/reduce
State 111 conflicts: 2 shift/reduce
State 112 conflicts: 2 shift/reduce
State 124 conflicts: 2 shift/reduce
State 126 conflicts: 2 shift/reduce
State 145 conflicts: 2 shift/reduce
State 159 conflicts: 2 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: CLASS ID OBRACE CBRACE
    2        | CLASS ID OBRACE initDeclaration CBRACE

    3 initDeclaration: FieldDecl
    4                | MethodDecl
    5                | SEMI
    6                | initDeclaration FieldDecl
    7                | initDeclaration MethodDecl
    8                | initDeclaration SEMI

    9 FieldDecl: PUBLIC STATIC Type ID SEMI
   10          | PUBLIC STATIC Type ID CommaID SEMI

   11 CommaID: COMMA ID
   12        | CommaID COMMA ID

   13 MethodDecl: PUBLIC STATIC MethodHeader MethodBody

   14 MethodHeader: Type ID OCURV FormalParams CCURV
   15             | Type ID OCURV CCURV
   16             | VOID ID OCURV FormalParams CCURV
   17             | VOID ID OCURV CCURV

   18 MethodBody: OBRACE CBRACE
   19           | OBRACE MethodParams CBRACE

   20 MethodParams: VarDecl
   21             | Statement
   22             | MethodParams VarDecl
   23             | MethodParams Statement

   24 FormalParams: Type ID
   25             | Type ID CommaTypeID
   26             | STRING OSQUARE CSQUARE ID

   27 CommaTypeID: COMMA Type ID
   28            | CommaTypeID COMMA Type ID

   29 VarDecl: Type ID CommaID SEMI

   30 Type: BOOL
   31     | INT
   32     | DOUBLE

   33 Statement: OBRACE CBRACE
   34          | OBRACE Statement CBRACE
   35          | IF OCURV Expr CCURV Statement ELSE Statement
   36          | WHILE OCURV Expr CCURV Statement
   37          | DO Statement WHILE OCURV Expr CCURV SEMI
   38          | PRINT OCURV Expr CCURV SEMI
   39          | PRINT OCURV STRLIT CCURV SEMI
   40          | SEMI
   41          | Assignment SEMI
   42          | MethodInvocation SEMI
   43          | ParseArgs SEMI
   44          | RETURN SEMI
   45          | RETURN Expr SEMI

   46 Assignment: ID ASSIGN

   47 Expr: /* empty */

   48 MethodInvocation: ID OCURV CCURV
   49                 | ID OCURV Expr CCURV
   50                 | ID OCURV Expr CommaExpr CCURV

   51 CommaExpr: COMMA Expr
   52          | CommaExpr COMMA Expr

   53 ParseArgs: PARSEINT OCURV ID OSQUARE Expr CSQUARE CCURV

   54 Expr: Assignment
   55     | MethodInvocation
   56     | ParseArgs
   57     | Expr AND Expr
   58     | Expr OR Expr
   59     | Expr EQ Expr
   60     | Expr GEQ Expr
   61     | Expr GT Expr
   62     | Expr LEQ Expr
   63     | Expr LT Expr
   64     | Expr NEQ Expr
   65     | Expr PLUS Expr
   66     | Expr MINUS Expr
   67     | Expr STAR Expr
   68     | Expr DIV Expr
   69     | Expr MOD Expr
   70     | PLUS Expr
   71     | MINUS Expr
   72     | NOT Expr
   73     | ID
   74     | ID DOTLENGTH
   75     | OCURV Expr CCURV
   76     | BOOLLIT
   77     | DECLIT
   78     | REALLIT


Terminals, with rules where they appear

$end (0) 0
error (256)
STRLIT (258) 39
REALLIT (259) 78
DECLIT (260) 77
RESERVED (261)
BOOL (262) 30
BOOLLIT (263) 76
CLASS (264) 1 2
DO (265) 37
DOTLENGTH (266) 74
DOUBLE (267) 32
ELSE (268) 35
IF (269) 35
INT (270) 31
PARSEINT (271) 53
PRINT (272) 38 39
PUBLIC (273) 9 10 13
RETURN (274) 44 45
STATIC (275) 9 10 13
STRING (276) 26
VOID (277) 16 17
WHILE (278) 36 37
OCURV (279) 14 15 16 17 35 36 37 38 39 48 49 50 53 75
CCURV (280) 14 15 16 17 35 36 37 38 39 48 49 50 53 75
OBRACE (281) 1 2 18 19 33 34
CBRACE (282) 1 2 18 19 33 34
OSQUARE (283) 26 53
CSQUARE (284) 26 53
AND (285) 57
OR (286) 58
LT (287) 63
GT (288) 61
EQ (289) 59
NEQ (290) 64
LEQ (291) 62
GEQ (292) 60
PLUS (293) 65 70
MINUS (294) 66 71
STAR (295) 67
DIV (296) 68
MOD (297) 69
NOT (298) 72
ASSIGN (299) 46
SEMI (300) 5 8 9 10 29 37 38 39 40 41 42 43 44 45
COMMA (301) 11 12 27 28 51 52
ID (302) 1 2 9 10 11 12 14 15 16 17 24 25 26 27 28 29 46 48 49 50 53
    73 74
DOTLENGHT (303)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
Program (50)
    on left: 1 2, on right: 0
initDeclaration (51)
    on left: 3 4 5 6 7 8, on right: 2 6 7 8
FieldDecl (52)
    on left: 9 10, on right: 3 6
CommaID (53)
    on left: 11 12, on right: 10 12 29
MethodDecl (54)
    on left: 13, on right: 4 7
MethodHeader (55)
    on left: 14 15 16 17, on right: 13
MethodBody (56)
    on left: 18 19, on right: 13
MethodParams (57)
    on left: 20 21 22 23, on right: 19 22 23
FormalParams (58)
    on left: 24 25 26, on right: 14 16
CommaTypeID (59)
    on left: 27 28, on right: 25 28
VarDecl (60)
    on left: 29, on right: 20 22
Type (61)
    on left: 30 31 32, on right: 9 10 14 15 24 25 27 28 29
Statement (62)
    on left: 33 34 35 36 37 38 39 40 41 42 43 44 45,
    on right: 21 23 34 35 36 37
Assignment (63)
    on left: 46, on right: 41 54
Expr (64)
    on left: 47 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
    71 72 73 74 75 76 77 78, on right: 35 36 37 38 45 49 50 51 52 53
    57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 75
MethodInvocation (65)
    on left: 48 49 50, on right: 42 55
CommaExpr (66)
    on left: 51 52, on right: 50 52
ParseArgs (67)
    on left: 53, on right: 43 56


state 0

    0 $accept: . Program $end

    CLASS  shift, and go to state 1

    Program  go to state 2


state 1

    1 Program: CLASS . ID OBRACE CBRACE
    2        | CLASS . ID OBRACE initDeclaration CBRACE

    ID  shift, and go to state 3


state 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


state 3

    1 Program: CLASS ID . OBRACE CBRACE
    2        | CLASS ID . OBRACE initDeclaration CBRACE

    OBRACE  shift, and go to state 5


state 4

    0 $accept: Program $end .

    $default  accept


state 5

    1 Program: CLASS ID OBRACE . CBRACE
    2        | CLASS ID OBRACE . initDeclaration CBRACE

    PUBLIC  shift, and go to state 6
    CBRACE  shift, and go to state 7
    SEMI    shift, and go to state 8

    initDeclaration  go to state 9
    FieldDecl        go to state 10
    MethodDecl       go to state 11


state 6

    9 FieldDecl: PUBLIC . STATIC Type ID SEMI
   10          | PUBLIC . STATIC Type ID CommaID SEMI
   13 MethodDecl: PUBLIC . STATIC MethodHeader MethodBody

    STATIC  shift, and go to state 12


state 7

    1 Program: CLASS ID OBRACE CBRACE .

    $default  reduce using rule 1 (Program)


state 8

    5 initDeclaration: SEMI .

    $default  reduce using rule 5 (initDeclaration)


state 9

    2 Program: CLASS ID OBRACE initDeclaration . CBRACE
    6 initDeclaration: initDeclaration . FieldDecl
    7                | initDeclaration . MethodDecl
    8                | initDeclaration . SEMI

    PUBLIC  shift, and go to state 6
    CBRACE  shift, and go to state 13
    SEMI    shift, and go to state 14

    FieldDecl   go to state 15
    MethodDecl  go to state 16


state 10

    3 initDeclaration: FieldDecl .

    $default  reduce using rule 3 (initDeclaration)


state 11

    4 initDeclaration: MethodDecl .

    $default  reduce using rule 4 (initDeclaration)


state 12

    9 FieldDecl: PUBLIC STATIC . Type ID SEMI
   10          | PUBLIC STATIC . Type ID CommaID SEMI
   13 MethodDecl: PUBLIC STATIC . MethodHeader MethodBody

    BOOL    shift, and go to state 17
    DOUBLE  shift, and go to state 18
    INT     shift, and go to state 19
    VOID    shift, and go to state 20

    MethodHeader  go to state 21
    Type          go to state 22


state 13

    2 Program: CLASS ID OBRACE initDeclaration CBRACE .

    $default  reduce using rule 2 (Program)


state 14

    8 initDeclaration: initDeclaration SEMI .

    $default  reduce using rule 8 (initDeclaration)


state 15

    6 initDeclaration: initDeclaration FieldDecl .

    $default  reduce using rule 6 (initDeclaration)


state 16

    7 initDeclaration: initDeclaration MethodDecl .

    $default  reduce using rule 7 (initDeclaration)


state 17

   30 Type: BOOL .

    $default  reduce using rule 30 (Type)


state 18

   32 Type: DOUBLE .

    $default  reduce using rule 32 (Type)


state 19

   31 Type: INT .

    $default  reduce using rule 31 (Type)


state 20

   16 MethodHeader: VOID . ID OCURV FormalParams CCURV
   17             | VOID . ID OCURV CCURV

    ID  shift, and go to state 23


state 21

   13 MethodDecl: PUBLIC STATIC MethodHeader . MethodBody

    OBRACE  shift, and go to state 24

    MethodBody  go to state 25


state 22

    9 FieldDecl: PUBLIC STATIC Type . ID SEMI
   10          | PUBLIC STATIC Type . ID CommaID SEMI
   14 MethodHeader: Type . ID OCURV FormalParams CCURV
   15             | Type . ID OCURV CCURV

    ID  shift, and go to state 26


state 23

   16 MethodHeader: VOID ID . OCURV FormalParams CCURV
   17             | VOID ID . OCURV CCURV

    OCURV  shift, and go to state 27


state 24

   18 MethodBody: OBRACE . CBRACE
   19           | OBRACE . MethodParams CBRACE

    BOOL      shift, and go to state 17
    DO        shift, and go to state 28
    DOUBLE    shift, and go to state 18
    IF        shift, and go to state 29
    INT       shift, and go to state 19
    PARSEINT  shift, and go to state 30
    PRINT     shift, and go to state 31
    RETURN    shift, and go to state 32
    WHILE     shift, and go to state 33
    OBRACE    shift, and go to state 34
    CBRACE    shift, and go to state 35
    SEMI      shift, and go to state 36
    ID        shift, and go to state 37

    MethodParams      go to state 38
    VarDecl           go to state 39
    Type              go to state 40
    Statement         go to state 41
    Assignment        go to state 42
    MethodInvocation  go to state 43
    ParseArgs         go to state 44


state 25

   13 MethodDecl: PUBLIC STATIC MethodHeader MethodBody .

    $default  reduce using rule 13 (MethodDecl)


state 26

    9 FieldDecl: PUBLIC STATIC Type ID . SEMI
   10          | PUBLIC STATIC Type ID . CommaID SEMI
   14 MethodHeader: Type ID . OCURV FormalParams CCURV
   15             | Type ID . OCURV CCURV

    OCURV  shift, and go to state 45
    SEMI   shift, and go to state 46
    COMMA  shift, and go to state 47

    CommaID  go to state 48


state 27

   16 MethodHeader: VOID ID OCURV . FormalParams CCURV
   17             | VOID ID OCURV . CCURV

    BOOL    shift, and go to state 17
    DOUBLE  shift, and go to state 18
    INT     shift, and go to state 19
    STRING  shift, and go to state 49
    CCURV   shift, and go to state 50

    FormalParams  go to state 51
    Type          go to state 52


state 28

   37 Statement: DO . Statement WHILE OCURV Expr CCURV SEMI

    DO        shift, and go to state 28
    IF        shift, and go to state 29
    PARSEINT  shift, and go to state 30
    PRINT     shift, and go to state 31
    RETURN    shift, and go to state 32
    WHILE     shift, and go to state 33
    OBRACE    shift, and go to state 34
    SEMI      shift, and go to state 36
    ID        shift, and go to state 37

    Statement         go to state 53
    Assignment        go to state 42
    MethodInvocation  go to state 43
    ParseArgs         go to state 44


state 29

   35 Statement: IF . OCURV Expr CCURV Statement ELSE Statement

    OCURV  shift, and go to state 54


state 30

   53 ParseArgs: PARSEINT . OCURV ID OSQUARE Expr CSQUARE CCURV

    OCURV  shift, and go to state 55


state 31

   38 Statement: PRINT . OCURV Expr CCURV SEMI
   39          | PRINT . OCURV STRLIT CCURV SEMI

    OCURV  shift, and go to state 56


state 32

   44 Statement: RETURN . SEMI
   45          | RETURN . Expr SEMI

    REALLIT   shift, and go to state 57
    DECLIT    shift, and go to state 58
    BOOLLIT   shift, and go to state 59
    PARSEINT  shift, and go to state 30
    OCURV     shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    SEMI      shift, and go to state 64
    ID        shift, and go to state 65

    PLUS      [reduce using rule 47 (Expr)]
    MINUS     [reduce using rule 47 (Expr)]
    SEMI      [reduce using rule 47 (Expr)]
    $default  reduce using rule 47 (Expr)

    Assignment        go to state 66
    Expr              go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69


state 33

   36 Statement: WHILE . OCURV Expr CCURV Statement

    OCURV  shift, and go to state 70


state 34

   33 Statement: OBRACE . CBRACE
   34          | OBRACE . Statement CBRACE

    DO        shift, and go to state 28
    IF        shift, and go to state 29
    PARSEINT  shift, and go to state 30
    PRINT     shift, and go to state 31
    RETURN    shift, and go to state 32
    WHILE     shift, and go to state 33
    OBRACE    shift, and go to state 34
    CBRACE    shift, and go to state 71
    SEMI      shift, and go to state 36
    ID        shift, and go to state 37

    Statement         go to state 72
    Assignment        go to state 42
    MethodInvocation  go to state 43
    ParseArgs         go to state 44


state 35

   18 MethodBody: OBRACE CBRACE .

    $default  reduce using rule 18 (MethodBody)


state 36

   40 Statement: SEMI .

    $default  reduce using rule 40 (Statement)


state 37

   46 Assignment: ID . ASSIGN
   48 MethodInvocation: ID . OCURV CCURV
   49                 | ID . OCURV Expr CCURV
   50                 | ID . OCURV Expr CommaExpr CCURV

    OCURV   shift, and go to state 73
    ASSIGN  shift, and go to state 74


state 38

   19 MethodBody: OBRACE MethodParams . CBRACE
   22 MethodParams: MethodParams . VarDecl
   23             | MethodParams . Statement

    BOOL      shift, and go to state 17
    DO        shift, and go to state 28
    DOUBLE    shift, and go to state 18
    IF        shift, and go to state 29
    INT       shift, and go to state 19
    PARSEINT  shift, and go to state 30
    PRINT     shift, and go to state 31
    RETURN    shift, and go to state 32
    WHILE     shift, and go to state 33
    OBRACE    shift, and go to state 34
    CBRACE    shift, and go to state 75
    SEMI      shift, and go to state 36
    ID        shift, and go to state 37

    VarDecl           go to state 76
    Type              go to state 40
    Statement         go to state 77
    Assignment        go to state 42
    MethodInvocation  go to state 43
    ParseArgs         go to state 44


state 39

   20 MethodParams: VarDecl .

    $default  reduce using rule 20 (MethodParams)


state 40

   29 VarDecl: Type . ID CommaID SEMI

    ID  shift, and go to state 78


state 41

   21 MethodParams: Statement .

    $default  reduce using rule 21 (MethodParams)


state 42

   41 Statement: Assignment . SEMI

    SEMI  shift, and go to state 79


state 43

   42 Statement: MethodInvocation . SEMI

    SEMI  shift, and go to state 80


state 44

   43 Statement: ParseArgs . SEMI

    SEMI  shift, and go to state 81


state 45

   14 MethodHeader: Type ID OCURV . FormalParams CCURV
   15             | Type ID OCURV . CCURV

    BOOL    shift, and go to state 17
    DOUBLE  shift, and go to state 18
    INT     shift, and go to state 19
    STRING  shift, and go to state 49
    CCURV   shift, and go to state 82

    FormalParams  go to state 83
    Type          go to state 52


state 46

    9 FieldDecl: PUBLIC STATIC Type ID SEMI .

    $default  reduce using rule 9 (FieldDecl)


state 47

   11 CommaID: COMMA . ID

    ID  shift, and go to state 84


state 48

   10 FieldDecl: PUBLIC STATIC Type ID CommaID . SEMI
   12 CommaID: CommaID . COMMA ID

    SEMI   shift, and go to state 85
    COMMA  shift, and go to state 86


state 49

   26 FormalParams: STRING . OSQUARE CSQUARE ID

    OSQUARE  shift, and go to state 87


state 50

   17 MethodHeader: VOID ID OCURV CCURV .

    $default  reduce using rule 17 (MethodHeader)


state 51

   16 MethodHeader: VOID ID OCURV FormalParams . CCURV

    CCURV  shift, and go to state 88


state 52

   24 FormalParams: Type . ID
   25             | Type . ID CommaTypeID

    ID  shift, and go to state 89


state 53

   37 Statement: DO Statement . WHILE OCURV Expr CCURV SEMI

    WHILE  shift, and go to state 90


state 54

   35 Statement: IF OCURV . Expr CCURV Statement ELSE Statement

    REALLIT   shift, and go to state 57
    DECLIT    shift, and go to state 58
    BOOLLIT   shift, and go to state 59
    PARSEINT  shift, and go to state 30
    OCURV     shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    ID        shift, and go to state 65

    PLUS      [reduce using rule 47 (Expr)]
    MINUS     [reduce using rule 47 (Expr)]
    $default  reduce using rule 47 (Expr)

    Assignment        go to state 66
    Expr              go to state 91
    MethodInvocation  go to state 68
    ParseArgs         go to state 69


state 55

   53 ParseArgs: PARSEINT OCURV . ID OSQUARE Expr CSQUARE CCURV

    ID  shift, and go to state 92


state 56

   38 Statement: PRINT OCURV . Expr CCURV SEMI
   39          | PRINT OCURV . STRLIT CCURV SEMI

    STRLIT    shift, and go to state 93
    REALLIT   shift, and go to state 57
    DECLIT    shift, and go to state 58
    BOOLLIT   shift, and go to state 59
    PARSEINT  shift, and go to state 30
    OCURV     shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    ID        shift, and go to state 65

    PLUS      [reduce using rule 47 (Expr)]
    MINUS     [reduce using rule 47 (Expr)]
    $default  reduce using rule 47 (Expr)

    Assignment        go to state 66
    Expr              go to state 94
    MethodInvocation  go to state 68
    ParseArgs         go to state 69


state 57

   78 Expr: REALLIT .

    $default  reduce using rule 78 (Expr)


state 58

   77 Expr: DECLIT .

    $default  reduce using rule 77 (Expr)


state 59

   76 Expr: BOOLLIT .

    $default  reduce using rule 76 (Expr)


state 60

   75 Expr: OCURV . Expr CCURV

    REALLIT   shift, and go to state 57
    DECLIT    shift, and go to state 58
    BOOLLIT   shift, and go to state 59
    PARSEINT  shift, and go to state 30
    OCURV     shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    ID        shift, and go to state 65

    PLUS      [reduce using rule 47 (Expr)]
    MINUS     [reduce using rule 47 (Expr)]
    $default  reduce using rule 47 (Expr)

    Assignment        go to state 66
    Expr              go to state 95
    MethodInvocation  go to state 68
    ParseArgs         go to state 69


state 61

   70 Expr: PLUS . Expr

    REALLIT   shift, and go to state 57
    DECLIT    shift, and go to state 58
    BOOLLIT   shift, and go to state 59
    PARSEINT  shift, and go to state 30
    OCURV     shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    ID        shift, and go to state 65

    PLUS      [reduce using rule 47 (Expr)]
    MINUS     [reduce using rule 47 (Expr)]
    $default  reduce using rule 47 (Expr)

    Assignment        go to state 66
    Expr              go to state 96
    MethodInvocation  go to state 68
    ParseArgs         go to state 69


state 62

   71 Expr: MINUS . Expr

    REALLIT   shift, and go to state 57
    DECLIT    shift, and go to state 58
    BOOLLIT   shift, and go to state 59
    PARSEINT  shift, and go to state 30
    OCURV     shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    ID        shift, and go to state 65

    PLUS      [reduce using rule 47 (Expr)]
    MINUS     [reduce using rule 47 (Expr)]
    $default  reduce using rule 47 (Expr)

    Assignment        go to state 66
    Expr              go to state 97
    MethodInvocation  go to state 68
    ParseArgs         go to state 69


state 63

   72 Expr: NOT . Expr

    REALLIT   shift, and go to state 57
    DECLIT    shift, and go to state 58
    BOOLLIT   shift, and go to state 59
    PARSEINT  shift, and go to state 30
    OCURV     shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    ID        shift, and go to state 65

    PLUS      [reduce using rule 47 (Expr)]
    MINUS     [reduce using rule 47 (Expr)]
    $default  reduce using rule 47 (Expr)

    Assignment        go to state 66
    Expr              go to state 98
    MethodInvocation  go to state 68
    ParseArgs         go to state 69


state 64

   44 Statement: RETURN SEMI .

    $default  reduce using rule 44 (Statement)


state 65

   46 Assignment: ID . ASSIGN
   48 MethodInvocation: ID . OCURV CCURV
   49                 | ID . OCURV Expr CCURV
   50                 | ID . OCURV Expr CommaExpr CCURV
   73 Expr: ID .
   74     | ID . DOTLENGTH

    DOTLENGTH  shift, and go to state 99
    OCURV      shift, and go to state 73
    ASSIGN     shift, and go to state 74

    $default  reduce using rule 73 (Expr)


state 66

   54 Expr: Assignment .

    $default  reduce using rule 54 (Expr)


state 67

   45 Statement: RETURN Expr . SEMI
   57 Expr: Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . EQ Expr
   60     | Expr . GEQ Expr
   61     | Expr . GT Expr
   62     | Expr . LEQ Expr
   63     | Expr . LT Expr
   64     | Expr . NEQ Expr
   65     | Expr . PLUS Expr
   66     | Expr . MINUS Expr
   67     | Expr . STAR Expr
   68     | Expr . DIV Expr
   69     | Expr . MOD Expr

    AND    shift, and go to state 100
    OR     shift, and go to state 101
    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NEQ    shift, and go to state 105
    LEQ    shift, and go to state 106
    GEQ    shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112
    SEMI   shift, and go to state 113


state 68

   55 Expr: MethodInvocation .

    $default  reduce using rule 55 (Expr)


state 69

   56 Expr: ParseArgs .

    $default  reduce using rule 56 (Expr)


state 70

   36 Statement: WHILE OCURV . Expr CCURV Statement

    REALLIT   shift, and go to state 57
    DECLIT    shift, and go to state 58
    BOOLLIT   shift, and go to state 59
    PARSEINT  shift, and go to state 30
    OCURV     shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    ID        shift, and go to state 65

    PLUS      [reduce using rule 47 (Expr)]
    MINUS     [reduce using rule 47 (Expr)]
    $default  reduce using rule 47 (Expr)

    Assignment        go to state 66
    Expr              go to state 114
    MethodInvocation  go to state 68
    ParseArgs         go to state 69


state 71

   33 Statement: OBRACE CBRACE .

    $default  reduce using rule 33 (Statement)


state 72

   34 Statement: OBRACE Statement . CBRACE

    CBRACE  shift, and go to state 115


state 73

   48 MethodInvocation: ID OCURV . CCURV
   49                 | ID OCURV . Expr CCURV
   50                 | ID OCURV . Expr CommaExpr CCURV

    REALLIT   shift, and go to state 57
    DECLIT    shift, and go to state 58
    BOOLLIT   shift, and go to state 59
    PARSEINT  shift, and go to state 30
    OCURV     shift, and go to state 60
    CCURV     shift, and go to state 116
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    ID        shift, and go to state 65

    CCURV     [reduce using rule 47 (Expr)]
    PLUS      [reduce using rule 47 (Expr)]
    MINUS     [reduce using rule 47 (Expr)]
    $default  reduce using rule 47 (Expr)

    Assignment        go to state 66
    Expr              go to state 117
    MethodInvocation  go to state 68
    ParseArgs         go to state 69


state 74

   46 Assignment: ID ASSIGN .

    $default  reduce using rule 46 (Assignment)


state 75

   19 MethodBody: OBRACE MethodParams CBRACE .

    $default  reduce using rule 19 (MethodBody)


state 76

   22 MethodParams: MethodParams VarDecl .

    $default  reduce using rule 22 (MethodParams)


state 77

   23 MethodParams: MethodParams Statement .

    $default  reduce using rule 23 (MethodParams)


state 78

   29 VarDecl: Type ID . CommaID SEMI

    COMMA  shift, and go to state 47

    CommaID  go to state 118


state 79

   41 Statement: Assignment SEMI .

    $default  reduce using rule 41 (Statement)


state 80

   42 Statement: MethodInvocation SEMI .

    $default  reduce using rule 42 (Statement)


state 81

   43 Statement: ParseArgs SEMI .

    $default  reduce using rule 43 (Statement)


state 82

   15 MethodHeader: Type ID OCURV CCURV .

    $default  reduce using rule 15 (MethodHeader)


state 83

   14 MethodHeader: Type ID OCURV FormalParams . CCURV

    CCURV  shift, and go to state 119


state 84

   11 CommaID: COMMA ID .

    $default  reduce using rule 11 (CommaID)


state 85

   10 FieldDecl: PUBLIC STATIC Type ID CommaID SEMI .

    $default  reduce using rule 10 (FieldDecl)


state 86

   12 CommaID: CommaID COMMA . ID

    ID  shift, and go to state 120


state 87

   26 FormalParams: STRING OSQUARE . CSQUARE ID

    CSQUARE  shift, and go to state 121


state 88

   16 MethodHeader: VOID ID OCURV FormalParams CCURV .

    $default  reduce using rule 16 (MethodHeader)


state 89

   24 FormalParams: Type ID .
   25             | Type ID . CommaTypeID

    COMMA  shift, and go to state 122

    $default  reduce using rule 24 (FormalParams)

    CommaTypeID  go to state 123


state 90

   37 Statement: DO Statement WHILE . OCURV Expr CCURV SEMI

    OCURV  shift, and go to state 124


state 91

   35 Statement: IF OCURV Expr . CCURV Statement ELSE Statement
   57 Expr: Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . EQ Expr
   60     | Expr . GEQ Expr
   61     | Expr . GT Expr
   62     | Expr . LEQ Expr
   63     | Expr . LT Expr
   64     | Expr . NEQ Expr
   65     | Expr . PLUS Expr
   66     | Expr . MINUS Expr
   67     | Expr . STAR Expr
   68     | Expr . DIV Expr
   69     | Expr . MOD Expr

    CCURV  shift, and go to state 125
    AND    shift, and go to state 100
    OR     shift, and go to state 101
    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NEQ    shift, and go to state 105
    LEQ    shift, and go to state 106
    GEQ    shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112


state 92

   53 ParseArgs: PARSEINT OCURV ID . OSQUARE Expr CSQUARE CCURV

    OSQUARE  shift, and go to state 126


state 93

   39 Statement: PRINT OCURV STRLIT . CCURV SEMI

    CCURV  shift, and go to state 127


state 94

   38 Statement: PRINT OCURV Expr . CCURV SEMI
   57 Expr: Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . EQ Expr
   60     | Expr . GEQ Expr
   61     | Expr . GT Expr
   62     | Expr . LEQ Expr
   63     | Expr . LT Expr
   64     | Expr . NEQ Expr
   65     | Expr . PLUS Expr
   66     | Expr . MINUS Expr
   67     | Expr . STAR Expr
   68     | Expr . DIV Expr
   69     | Expr . MOD Expr

    CCURV  shift, and go to state 128
    AND    shift, and go to state 100
    OR     shift, and go to state 101
    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NEQ    shift, and go to state 105
    LEQ    shift, and go to state 106
    GEQ    shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112


state 95

   57 Expr: Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . EQ Expr
   60     | Expr . GEQ Expr
   61     | Expr . GT Expr
   62     | Expr . LEQ Expr
   63     | Expr . LT Expr
   64     | Expr . NEQ Expr
   65     | Expr . PLUS Expr
   66     | Expr . MINUS Expr
   67     | Expr . STAR Expr
   68     | Expr . DIV Expr
   69     | Expr . MOD Expr
   75     | OCURV Expr . CCURV

    CCURV  shift, and go to state 129
    AND    shift, and go to state 100
    OR     shift, and go to state 101
    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NEQ    shift, and go to state 105
    LEQ    shift, and go to state 106
    GEQ    shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112


state 96

   57 Expr: Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . EQ Expr
   60     | Expr . GEQ Expr
   61     | Expr . GT Expr
   62     | Expr . LEQ Expr
   63     | Expr . LT Expr
   64     | Expr . NEQ Expr
   65     | Expr . PLUS Expr
   66     | Expr . MINUS Expr
   67     | Expr . STAR Expr
   68     | Expr . DIV Expr
   69     | Expr . MOD Expr
   70     | PLUS Expr .

    STAR  shift, and go to state 110
    DIV   shift, and go to state 111
    MOD   shift, and go to state 112

    $default  reduce using rule 70 (Expr)


state 97

   57 Expr: Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . EQ Expr
   60     | Expr . GEQ Expr
   61     | Expr . GT Expr
   62     | Expr . LEQ Expr
   63     | Expr . LT Expr
   64     | Expr . NEQ Expr
   65     | Expr . PLUS Expr
   66     | Expr . MINUS Expr
   67     | Expr . STAR Expr
   68     | Expr . DIV Expr
   69     | Expr . MOD Expr
   71     | MINUS Expr .

    STAR  shift, and go to state 110
    DIV   shift, and go to state 111
    MOD   shift, and go to state 112

    $default  reduce using rule 71 (Expr)


state 98

   57 Expr: Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . EQ Expr
   60     | Expr . GEQ Expr
   61     | Expr . GT Expr
   62     | Expr . LEQ Expr
   63     | Expr . LT Expr
   64     | Expr . NEQ Expr
   65     | Expr . PLUS Expr
   66     | Expr . MINUS Expr
   67     | Expr . STAR Expr
   68     | Expr . DIV Expr
   69     | Expr . MOD Expr
   72     | NOT Expr .

    $default  reduce using rule 72 (Expr)


state 99

   74 Expr: ID DOTLENGTH .

    $default  reduce using rule 74 (Expr)


state 100

   57 Expr: Expr AND . Expr

    REALLIT   shift, and go to state 57
    DECLIT    shift, and go to state 58
    BOOLLIT   shift, and go to state 59
    PARSEINT  shift, and go to state 30
    OCURV     shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    ID        shift, and go to state 65

    PLUS      [reduce using rule 47 (Expr)]
    MINUS     [reduce using rule 47 (Expr)]
    $default  reduce using rule 47 (Expr)

    Assignment        go to state 66
    Expr              go to state 130
    MethodInvocation  go to state 68
    ParseArgs         go to state 69


state 101

   58 Expr: Expr OR . Expr

    REALLIT   shift, and go to state 57
    DECLIT    shift, and go to state 58
    BOOLLIT   shift, and go to state 59
    PARSEINT  shift, and go to state 30
    OCURV     shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    ID        shift, and go to state 65

    PLUS      [reduce using rule 47 (Expr)]
    MINUS     [reduce using rule 47 (Expr)]
    $default  reduce using rule 47 (Expr)

    Assignment        go to state 66
    Expr              go to state 131
    MethodInvocation  go to state 68
    ParseArgs         go to state 69


state 102

   63 Expr: Expr LT . Expr

    REALLIT   shift, and go to state 57
    DECLIT    shift, and go to state 58
    BOOLLIT   shift, and go to state 59
    PARSEINT  shift, and go to state 30
    OCURV     shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    ID        shift, and go to state 65

    PLUS      [reduce using rule 47 (Expr)]
    MINUS     [reduce using rule 47 (Expr)]
    $default  reduce using rule 47 (Expr)

    Assignment        go to state 66
    Expr              go to state 132
    MethodInvocation  go to state 68
    ParseArgs         go to state 69


state 103

   61 Expr: Expr GT . Expr

    REALLIT   shift, and go to state 57
    DECLIT    shift, and go to state 58
    BOOLLIT   shift, and go to state 59
    PARSEINT  shift, and go to state 30
    OCURV     shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    ID        shift, and go to state 65

    PLUS      [reduce using rule 47 (Expr)]
    MINUS     [reduce using rule 47 (Expr)]
    $default  reduce using rule 47 (Expr)

    Assignment        go to state 66
    Expr              go to state 133
    MethodInvocation  go to state 68
    ParseArgs         go to state 69


state 104

   59 Expr: Expr EQ . Expr

    REALLIT   shift, and go to state 57
    DECLIT    shift, and go to state 58
    BOOLLIT   shift, and go to state 59
    PARSEINT  shift, and go to state 30
    OCURV     shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    ID        shift, and go to state 65

    PLUS      [reduce using rule 47 (Expr)]
    MINUS     [reduce using rule 47 (Expr)]
    $default  reduce using rule 47 (Expr)

    Assignment        go to state 66
    Expr              go to state 134
    MethodInvocation  go to state 68
    ParseArgs         go to state 69


state 105

   64 Expr: Expr NEQ . Expr

    REALLIT   shift, and go to state 57
    DECLIT    shift, and go to state 58
    BOOLLIT   shift, and go to state 59
    PARSEINT  shift, and go to state 30
    OCURV     shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    ID        shift, and go to state 65

    PLUS      [reduce using rule 47 (Expr)]
    MINUS     [reduce using rule 47 (Expr)]
    $default  reduce using rule 47 (Expr)

    Assignment        go to state 66
    Expr              go to state 135
    MethodInvocation  go to state 68
    ParseArgs         go to state 69


state 106

   62 Expr: Expr LEQ . Expr

    REALLIT   shift, and go to state 57
    DECLIT    shift, and go to state 58
    BOOLLIT   shift, and go to state 59
    PARSEINT  shift, and go to state 30
    OCURV     shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    ID        shift, and go to state 65

    PLUS      [reduce using rule 47 (Expr)]
    MINUS     [reduce using rule 47 (Expr)]
    $default  reduce using rule 47 (Expr)

    Assignment        go to state 66
    Expr              go to state 136
    MethodInvocation  go to state 68
    ParseArgs         go to state 69


state 107

   60 Expr: Expr GEQ . Expr

    REALLIT   shift, and go to state 57
    DECLIT    shift, and go to state 58
    BOOLLIT   shift, and go to state 59
    PARSEINT  shift, and go to state 30
    OCURV     shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    ID        shift, and go to state 65

    PLUS      [reduce using rule 47 (Expr)]
    MINUS     [reduce using rule 47 (Expr)]
    $default  reduce using rule 47 (Expr)

    Assignment        go to state 66
    Expr              go to state 137
    MethodInvocation  go to state 68
    ParseArgs         go to state 69


state 108

   65 Expr: Expr PLUS . Expr

    REALLIT   shift, and go to state 57
    DECLIT    shift, and go to state 58
    BOOLLIT   shift, and go to state 59
    PARSEINT  shift, and go to state 30
    OCURV     shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    ID        shift, and go to state 65

    PLUS      [reduce using rule 47 (Expr)]
    MINUS     [reduce using rule 47 (Expr)]
    $default  reduce using rule 47 (Expr)

    Assignment        go to state 66
    Expr              go to state 138
    MethodInvocation  go to state 68
    ParseArgs         go to state 69


state 109

   66 Expr: Expr MINUS . Expr

    REALLIT   shift, and go to state 57
    DECLIT    shift, and go to state 58
    BOOLLIT   shift, and go to state 59
    PARSEINT  shift, and go to state 30
    OCURV     shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    ID        shift, and go to state 65

    PLUS      [reduce using rule 47 (Expr)]
    MINUS     [reduce using rule 47 (Expr)]
    $default  reduce using rule 47 (Expr)

    Assignment        go to state 66
    Expr              go to state 139
    MethodInvocation  go to state 68
    ParseArgs         go to state 69


state 110

   67 Expr: Expr STAR . Expr

    REALLIT   shift, and go to state 57
    DECLIT    shift, and go to state 58
    BOOLLIT   shift, and go to state 59
    PARSEINT  shift, and go to state 30
    OCURV     shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    ID        shift, and go to state 65

    PLUS      [reduce using rule 47 (Expr)]
    MINUS     [reduce using rule 47 (Expr)]
    $default  reduce using rule 47 (Expr)

    Assignment        go to state 66
    Expr              go to state 140
    MethodInvocation  go to state 68
    ParseArgs         go to state 69


state 111

   68 Expr: Expr DIV . Expr

    REALLIT   shift, and go to state 57
    DECLIT    shift, and go to state 58
    BOOLLIT   shift, and go to state 59
    PARSEINT  shift, and go to state 30
    OCURV     shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    ID        shift, and go to state 65

    PLUS      [reduce using rule 47 (Expr)]
    MINUS     [reduce using rule 47 (Expr)]
    $default  reduce using rule 47 (Expr)

    Assignment        go to state 66
    Expr              go to state 141
    MethodInvocation  go to state 68
    ParseArgs         go to state 69


state 112

   69 Expr: Expr MOD . Expr

    REALLIT   shift, and go to state 57
    DECLIT    shift, and go to state 58
    BOOLLIT   shift, and go to state 59
    PARSEINT  shift, and go to state 30
    OCURV     shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    ID        shift, and go to state 65

    PLUS      [reduce using rule 47 (Expr)]
    MINUS     [reduce using rule 47 (Expr)]
    $default  reduce using rule 47 (Expr)

    Assignment        go to state 66
    Expr              go to state 142
    MethodInvocation  go to state 68
    ParseArgs         go to state 69


state 113

   45 Statement: RETURN Expr SEMI .

    $default  reduce using rule 45 (Statement)


state 114

   36 Statement: WHILE OCURV Expr . CCURV Statement
   57 Expr: Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . EQ Expr
   60     | Expr . GEQ Expr
   61     | Expr . GT Expr
   62     | Expr . LEQ Expr
   63     | Expr . LT Expr
   64     | Expr . NEQ Expr
   65     | Expr . PLUS Expr
   66     | Expr . MINUS Expr
   67     | Expr . STAR Expr
   68     | Expr . DIV Expr
   69     | Expr . MOD Expr

    CCURV  shift, and go to state 143
    AND    shift, and go to state 100
    OR     shift, and go to state 101
    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NEQ    shift, and go to state 105
    LEQ    shift, and go to state 106
    GEQ    shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112


state 115

   34 Statement: OBRACE Statement CBRACE .

    $default  reduce using rule 34 (Statement)


state 116

   48 MethodInvocation: ID OCURV CCURV .

    $default  reduce using rule 48 (MethodInvocation)


state 117

   49 MethodInvocation: ID OCURV Expr . CCURV
   50                 | ID OCURV Expr . CommaExpr CCURV
   57 Expr: Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . EQ Expr
   60     | Expr . GEQ Expr
   61     | Expr . GT Expr
   62     | Expr . LEQ Expr
   63     | Expr . LT Expr
   64     | Expr . NEQ Expr
   65     | Expr . PLUS Expr
   66     | Expr . MINUS Expr
   67     | Expr . STAR Expr
   68     | Expr . DIV Expr
   69     | Expr . MOD Expr

    CCURV  shift, and go to state 144
    AND    shift, and go to state 100
    OR     shift, and go to state 101
    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NEQ    shift, and go to state 105
    LEQ    shift, and go to state 106
    GEQ    shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112
    COMMA  shift, and go to state 145

    CommaExpr  go to state 146


state 118

   12 CommaID: CommaID . COMMA ID
   29 VarDecl: Type ID CommaID . SEMI

    SEMI   shift, and go to state 147
    COMMA  shift, and go to state 86


state 119

   14 MethodHeader: Type ID OCURV FormalParams CCURV .

    $default  reduce using rule 14 (MethodHeader)


state 120

   12 CommaID: CommaID COMMA ID .

    $default  reduce using rule 12 (CommaID)


state 121

   26 FormalParams: STRING OSQUARE CSQUARE . ID

    ID  shift, and go to state 148


state 122

   27 CommaTypeID: COMMA . Type ID

    BOOL    shift, and go to state 17
    DOUBLE  shift, and go to state 18
    INT     shift, and go to state 19

    Type  go to state 149


state 123

   25 FormalParams: Type ID CommaTypeID .
   28 CommaTypeID: CommaTypeID . COMMA Type ID

    COMMA  shift, and go to state 150

    $default  reduce using rule 25 (FormalParams)


state 124

   37 Statement: DO Statement WHILE OCURV . Expr CCURV SEMI

    REALLIT   shift, and go to state 57
    DECLIT    shift, and go to state 58
    BOOLLIT   shift, and go to state 59
    PARSEINT  shift, and go to state 30
    OCURV     shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    ID        shift, and go to state 65

    PLUS      [reduce using rule 47 (Expr)]
    MINUS     [reduce using rule 47 (Expr)]
    $default  reduce using rule 47 (Expr)

    Assignment        go to state 66
    Expr              go to state 151
    MethodInvocation  go to state 68
    ParseArgs         go to state 69


state 125

   35 Statement: IF OCURV Expr CCURV . Statement ELSE Statement

    DO        shift, and go to state 28
    IF        shift, and go to state 29
    PARSEINT  shift, and go to state 30
    PRINT     shift, and go to state 31
    RETURN    shift, and go to state 32
    WHILE     shift, and go to state 33
    OBRACE    shift, and go to state 34
    SEMI      shift, and go to state 36
    ID        shift, and go to state 37

    Statement         go to state 152
    Assignment        go to state 42
    MethodInvocation  go to state 43
    ParseArgs         go to state 44


state 126

   53 ParseArgs: PARSEINT OCURV ID OSQUARE . Expr CSQUARE CCURV

    REALLIT   shift, and go to state 57
    DECLIT    shift, and go to state 58
    BOOLLIT   shift, and go to state 59
    PARSEINT  shift, and go to state 30
    OCURV     shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    ID        shift, and go to state 65

    PLUS      [reduce using rule 47 (Expr)]
    MINUS     [reduce using rule 47 (Expr)]
    $default  reduce using rule 47 (Expr)

    Assignment        go to state 66
    Expr              go to state 153
    MethodInvocation  go to state 68
    ParseArgs         go to state 69


state 127

   39 Statement: PRINT OCURV STRLIT CCURV . SEMI

    SEMI  shift, and go to state 154


state 128

   38 Statement: PRINT OCURV Expr CCURV . SEMI

    SEMI  shift, and go to state 155


state 129

   75 Expr: OCURV Expr CCURV .

    $default  reduce using rule 75 (Expr)


state 130

   57 Expr: Expr . AND Expr
   57     | Expr AND Expr .
   58     | Expr . OR Expr
   59     | Expr . EQ Expr
   60     | Expr . GEQ Expr
   61     | Expr . GT Expr
   62     | Expr . LEQ Expr
   63     | Expr . LT Expr
   64     | Expr . NEQ Expr
   65     | Expr . PLUS Expr
   66     | Expr . MINUS Expr
   67     | Expr . STAR Expr
   68     | Expr . DIV Expr
   69     | Expr . MOD Expr

    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NEQ    shift, and go to state 105
    LEQ    shift, and go to state 106
    GEQ    shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 57 (Expr)


state 131

   57 Expr: Expr . AND Expr
   58     | Expr . OR Expr
   58     | Expr OR Expr .
   59     | Expr . EQ Expr
   60     | Expr . GEQ Expr
   61     | Expr . GT Expr
   62     | Expr . LEQ Expr
   63     | Expr . LT Expr
   64     | Expr . NEQ Expr
   65     | Expr . PLUS Expr
   66     | Expr . MINUS Expr
   67     | Expr . STAR Expr
   68     | Expr . DIV Expr
   69     | Expr . MOD Expr

    AND    shift, and go to state 100
    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NEQ    shift, and go to state 105
    LEQ    shift, and go to state 106
    GEQ    shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 58 (Expr)


state 132

   57 Expr: Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . EQ Expr
   60     | Expr . GEQ Expr
   61     | Expr . GT Expr
   62     | Expr . LEQ Expr
   63     | Expr . LT Expr
   63     | Expr LT Expr .
   64     | Expr . NEQ Expr
   65     | Expr . PLUS Expr
   66     | Expr . MINUS Expr
   67     | Expr . STAR Expr
   68     | Expr . DIV Expr
   69     | Expr . MOD Expr

    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 63 (Expr)


state 133

   57 Expr: Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . EQ Expr
   60     | Expr . GEQ Expr
   61     | Expr . GT Expr
   61     | Expr GT Expr .
   62     | Expr . LEQ Expr
   63     | Expr . LT Expr
   64     | Expr . NEQ Expr
   65     | Expr . PLUS Expr
   66     | Expr . MINUS Expr
   67     | Expr . STAR Expr
   68     | Expr . DIV Expr
   69     | Expr . MOD Expr

    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 61 (Expr)


state 134

   57 Expr: Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . EQ Expr
   59     | Expr EQ Expr .
   60     | Expr . GEQ Expr
   61     | Expr . GT Expr
   62     | Expr . LEQ Expr
   63     | Expr . LT Expr
   64     | Expr . NEQ Expr
   65     | Expr . PLUS Expr
   66     | Expr . MINUS Expr
   67     | Expr . STAR Expr
   68     | Expr . DIV Expr
   69     | Expr . MOD Expr

    LT     shift, and go to state 102
    GT     shift, and go to state 103
    LEQ    shift, and go to state 106
    GEQ    shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 59 (Expr)


state 135

   57 Expr: Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . EQ Expr
   60     | Expr . GEQ Expr
   61     | Expr . GT Expr
   62     | Expr . LEQ Expr
   63     | Expr . LT Expr
   64     | Expr . NEQ Expr
   64     | Expr NEQ Expr .
   65     | Expr . PLUS Expr
   66     | Expr . MINUS Expr
   67     | Expr . STAR Expr
   68     | Expr . DIV Expr
   69     | Expr . MOD Expr

    LT     shift, and go to state 102
    GT     shift, and go to state 103
    LEQ    shift, and go to state 106
    GEQ    shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 64 (Expr)


state 136

   57 Expr: Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . EQ Expr
   60     | Expr . GEQ Expr
   61     | Expr . GT Expr
   62     | Expr . LEQ Expr
   62     | Expr LEQ Expr .
   63     | Expr . LT Expr
   64     | Expr . NEQ Expr
   65     | Expr . PLUS Expr
   66     | Expr . MINUS Expr
   67     | Expr . STAR Expr
   68     | Expr . DIV Expr
   69     | Expr . MOD Expr

    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 62 (Expr)


state 137

   57 Expr: Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . EQ Expr
   60     | Expr . GEQ Expr
   60     | Expr GEQ Expr .
   61     | Expr . GT Expr
   62     | Expr . LEQ Expr
   63     | Expr . LT Expr
   64     | Expr . NEQ Expr
   65     | Expr . PLUS Expr
   66     | Expr . MINUS Expr
   67     | Expr . STAR Expr
   68     | Expr . DIV Expr
   69     | Expr . MOD Expr

    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 60 (Expr)


state 138

   57 Expr: Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . EQ Expr
   60     | Expr . GEQ Expr
   61     | Expr . GT Expr
   62     | Expr . LEQ Expr
   63     | Expr . LT Expr
   64     | Expr . NEQ Expr
   65     | Expr . PLUS Expr
   65     | Expr PLUS Expr .
   66     | Expr . MINUS Expr
   67     | Expr . STAR Expr
   68     | Expr . DIV Expr
   69     | Expr . MOD Expr

    STAR  shift, and go to state 110
    DIV   shift, and go to state 111
    MOD   shift, and go to state 112

    $default  reduce using rule 65 (Expr)


state 139

   57 Expr: Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . EQ Expr
   60     | Expr . GEQ Expr
   61     | Expr . GT Expr
   62     | Expr . LEQ Expr
   63     | Expr . LT Expr
   64     | Expr . NEQ Expr
   65     | Expr . PLUS Expr
   66     | Expr . MINUS Expr
   66     | Expr MINUS Expr .
   67     | Expr . STAR Expr
   68     | Expr . DIV Expr
   69     | Expr . MOD Expr

    STAR  shift, and go to state 110
    DIV   shift, and go to state 111
    MOD   shift, and go to state 112

    $default  reduce using rule 66 (Expr)


state 140

   57 Expr: Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . EQ Expr
   60     | Expr . GEQ Expr
   61     | Expr . GT Expr
   62     | Expr . LEQ Expr
   63     | Expr . LT Expr
   64     | Expr . NEQ Expr
   65     | Expr . PLUS Expr
   66     | Expr . MINUS Expr
   67     | Expr . STAR Expr
   67     | Expr STAR Expr .
   68     | Expr . DIV Expr
   69     | Expr . MOD Expr

    $default  reduce using rule 67 (Expr)


state 141

   57 Expr: Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . EQ Expr
   60     | Expr . GEQ Expr
   61     | Expr . GT Expr
   62     | Expr . LEQ Expr
   63     | Expr . LT Expr
   64     | Expr . NEQ Expr
   65     | Expr . PLUS Expr
   66     | Expr . MINUS Expr
   67     | Expr . STAR Expr
   68     | Expr . DIV Expr
   68     | Expr DIV Expr .
   69     | Expr . MOD Expr

    $default  reduce using rule 68 (Expr)


state 142

   57 Expr: Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . EQ Expr
   60     | Expr . GEQ Expr
   61     | Expr . GT Expr
   62     | Expr . LEQ Expr
   63     | Expr . LT Expr
   64     | Expr . NEQ Expr
   65     | Expr . PLUS Expr
   66     | Expr . MINUS Expr
   67     | Expr . STAR Expr
   68     | Expr . DIV Expr
   69     | Expr . MOD Expr
   69     | Expr MOD Expr .

    $default  reduce using rule 69 (Expr)


state 143

   36 Statement: WHILE OCURV Expr CCURV . Statement

    DO        shift, and go to state 28
    IF        shift, and go to state 29
    PARSEINT  shift, and go to state 30
    PRINT     shift, and go to state 31
    RETURN    shift, and go to state 32
    WHILE     shift, and go to state 33
    OBRACE    shift, and go to state 34
    SEMI      shift, and go to state 36
    ID        shift, and go to state 37

    Statement         go to state 156
    Assignment        go to state 42
    MethodInvocation  go to state 43
    ParseArgs         go to state 44


state 144

   49 MethodInvocation: ID OCURV Expr CCURV .

    $default  reduce using rule 49 (MethodInvocation)


state 145

   51 CommaExpr: COMMA . Expr

    REALLIT   shift, and go to state 57
    DECLIT    shift, and go to state 58
    BOOLLIT   shift, and go to state 59
    PARSEINT  shift, and go to state 30
    OCURV     shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    ID        shift, and go to state 65

    PLUS      [reduce using rule 47 (Expr)]
    MINUS     [reduce using rule 47 (Expr)]
    $default  reduce using rule 47 (Expr)

    Assignment        go to state 66
    Expr              go to state 157
    MethodInvocation  go to state 68
    ParseArgs         go to state 69


state 146

   50 MethodInvocation: ID OCURV Expr CommaExpr . CCURV
   52 CommaExpr: CommaExpr . COMMA Expr

    CCURV  shift, and go to state 158
    COMMA  shift, and go to state 159


state 147

   29 VarDecl: Type ID CommaID SEMI .

    $default  reduce using rule 29 (VarDecl)


state 148

   26 FormalParams: STRING OSQUARE CSQUARE ID .

    $default  reduce using rule 26 (FormalParams)


state 149

   27 CommaTypeID: COMMA Type . ID

    ID  shift, and go to state 160


state 150

   28 CommaTypeID: CommaTypeID COMMA . Type ID

    BOOL    shift, and go to state 17
    DOUBLE  shift, and go to state 18
    INT     shift, and go to state 19

    Type  go to state 161


state 151

   37 Statement: DO Statement WHILE OCURV Expr . CCURV SEMI
   57 Expr: Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . EQ Expr
   60     | Expr . GEQ Expr
   61     | Expr . GT Expr
   62     | Expr . LEQ Expr
   63     | Expr . LT Expr
   64     | Expr . NEQ Expr
   65     | Expr . PLUS Expr
   66     | Expr . MINUS Expr
   67     | Expr . STAR Expr
   68     | Expr . DIV Expr
   69     | Expr . MOD Expr

    CCURV  shift, and go to state 162
    AND    shift, and go to state 100
    OR     shift, and go to state 101
    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NEQ    shift, and go to state 105
    LEQ    shift, and go to state 106
    GEQ    shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112


state 152

   35 Statement: IF OCURV Expr CCURV Statement . ELSE Statement

    ELSE  shift, and go to state 163


state 153

   53 ParseArgs: PARSEINT OCURV ID OSQUARE Expr . CSQUARE CCURV
   57 Expr: Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . EQ Expr
   60     | Expr . GEQ Expr
   61     | Expr . GT Expr
   62     | Expr . LEQ Expr
   63     | Expr . LT Expr
   64     | Expr . NEQ Expr
   65     | Expr . PLUS Expr
   66     | Expr . MINUS Expr
   67     | Expr . STAR Expr
   68     | Expr . DIV Expr
   69     | Expr . MOD Expr

    CSQUARE  shift, and go to state 164
    AND      shift, and go to state 100
    OR       shift, and go to state 101
    LT       shift, and go to state 102
    GT       shift, and go to state 103
    EQ       shift, and go to state 104
    NEQ      shift, and go to state 105
    LEQ      shift, and go to state 106
    GEQ      shift, and go to state 107
    PLUS     shift, and go to state 108
    MINUS    shift, and go to state 109
    STAR     shift, and go to state 110
    DIV      shift, and go to state 111
    MOD      shift, and go to state 112


state 154

   39 Statement: PRINT OCURV STRLIT CCURV SEMI .

    $default  reduce using rule 39 (Statement)


state 155

   38 Statement: PRINT OCURV Expr CCURV SEMI .

    $default  reduce using rule 38 (Statement)


state 156

   36 Statement: WHILE OCURV Expr CCURV Statement .

    $default  reduce using rule 36 (Statement)


state 157

   51 CommaExpr: COMMA Expr .
   57 Expr: Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . EQ Expr
   60     | Expr . GEQ Expr
   61     | Expr . GT Expr
   62     | Expr . LEQ Expr
   63     | Expr . LT Expr
   64     | Expr . NEQ Expr
   65     | Expr . PLUS Expr
   66     | Expr . MINUS Expr
   67     | Expr . STAR Expr
   68     | Expr . DIV Expr
   69     | Expr . MOD Expr

    AND    shift, and go to state 100
    OR     shift, and go to state 101
    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NEQ    shift, and go to state 105
    LEQ    shift, and go to state 106
    GEQ    shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 51 (CommaExpr)


state 158

   50 MethodInvocation: ID OCURV Expr CommaExpr CCURV .

    $default  reduce using rule 50 (MethodInvocation)


state 159

   52 CommaExpr: CommaExpr COMMA . Expr

    REALLIT   shift, and go to state 57
    DECLIT    shift, and go to state 58
    BOOLLIT   shift, and go to state 59
    PARSEINT  shift, and go to state 30
    OCURV     shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    ID        shift, and go to state 65

    PLUS      [reduce using rule 47 (Expr)]
    MINUS     [reduce using rule 47 (Expr)]
    $default  reduce using rule 47 (Expr)

    Assignment        go to state 66
    Expr              go to state 165
    MethodInvocation  go to state 68
    ParseArgs         go to state 69


state 160

   27 CommaTypeID: COMMA Type ID .

    $default  reduce using rule 27 (CommaTypeID)


state 161

   28 CommaTypeID: CommaTypeID COMMA Type . ID

    ID  shift, and go to state 166


state 162

   37 Statement: DO Statement WHILE OCURV Expr CCURV . SEMI

    SEMI  shift, and go to state 167


state 163

   35 Statement: IF OCURV Expr CCURV Statement ELSE . Statement

    DO        shift, and go to state 28
    IF        shift, and go to state 29
    PARSEINT  shift, and go to state 30
    PRINT     shift, and go to state 31
    RETURN    shift, and go to state 32
    WHILE     shift, and go to state 33
    OBRACE    shift, and go to state 34
    SEMI      shift, and go to state 36
    ID        shift, and go to state 37

    Statement         go to state 168
    Assignment        go to state 42
    MethodInvocation  go to state 43
    ParseArgs         go to state 44


state 164

   53 ParseArgs: PARSEINT OCURV ID OSQUARE Expr CSQUARE . CCURV

    CCURV  shift, and go to state 169


state 165

   52 CommaExpr: CommaExpr COMMA Expr .
   57 Expr: Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . EQ Expr
   60     | Expr . GEQ Expr
   61     | Expr . GT Expr
   62     | Expr . LEQ Expr
   63     | Expr . LT Expr
   64     | Expr . NEQ Expr
   65     | Expr . PLUS Expr
   66     | Expr . MINUS Expr
   67     | Expr . STAR Expr
   68     | Expr . DIV Expr
   69     | Expr . MOD Expr

    AND    shift, and go to state 100
    OR     shift, and go to state 101
    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NEQ    shift, and go to state 105
    LEQ    shift, and go to state 106
    GEQ    shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 52 (CommaExpr)


state 166

   28 CommaTypeID: CommaTypeID COMMA Type ID .

    $default  reduce using rule 28 (CommaTypeID)


state 167

   37 Statement: DO Statement WHILE OCURV Expr CCURV SEMI .

    $default  reduce using rule 37 (Statement)


state 168

   35 Statement: IF OCURV Expr CCURV Statement ELSE Statement .

    $default  reduce using rule 35 (Statement)


state 169

   53 ParseArgs: PARSEINT OCURV ID OSQUARE Expr CSQUARE CCURV .

    $default  reduce using rule 53 (ParseArgs)
